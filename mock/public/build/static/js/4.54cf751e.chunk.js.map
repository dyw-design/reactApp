{"version":3,"sources":["pages/classify/Classify.js"],"names":["Classify","state","goodsMenu","currentIndex","lists","isShow","top","changeMenu","index","setState","changeStyle","changeDisplay","clickHandler","id","dataName","ev","props","history","push","pathname","search","axios","url","this","length","then","res","data","window","scrollTo","scrollTop","that","className","map","item","key","onClick","bind","refs","allClassify","style","display","target","color","ref","i","src","img","alt","title","price","React","Component","connect","dispatch","tScroll","val","type","GET_SCROLL","payload"],"mappings":"oNAIMA,E,2MAEFC,MAAQ,CACJC,UAAY,CAAC,2BAAO,2BAAO,2BAAO,2BAAO,4BACzCC,aAAe,EACfC,MAAM,GACNC,QAAO,EACPC,IAAI,G,EAGRC,WAAa,SAACC,GACV,EAAKC,SAAS,CACVN,aAAaK,K,EAIrBE,YAAc,SAACF,GACX,OAAOA,IAAU,EAAKP,MAAME,aAAe,cAAgB,iB,EAE/DQ,cAAgB,SAACH,GACb,OAAOA,IAAU,EAAKP,MAAME,aAAe,gBAAkB,c,EAcjES,aAAa,SAACC,EAAGC,EAASC,GAEtB,EAAKC,MAAMC,QAAQC,KAAK,CACpBC,SAAS,WAAWN,EACpBO,OAAO,aAAaN,K,mFAfP,IAAD,OAChBd,EAASqB,MAAM,CACXC,IAAI,wBAAD,OAA0BC,KAAKtB,MAAME,aAArC,oBAA6DoB,KAAKtB,MAAMC,UAAUsB,UACtFC,KAAK,SAAAC,GACJ,EAAKjB,SAAS,CACVL,MAAMsB,EAAIC,KAAKA,SAGvBC,OAAOC,SAAS,EAAEN,KAAKP,MAAMc,a,+BAUvB,IAAD,OACD5B,EAAYqB,KAAKtB,MAAMC,UACvBE,EAAQmB,KAAKtB,MAAMG,MACnB2B,EAAOR,KACX,OACI,yBAAKS,UAAU,YACX,yBAAKA,UAAU,aACX,4BAEQ9B,EAAU+B,IAAI,SAACC,EAAK1B,GAAN,OACd,wBAAI2B,IAAK3B,EAAO4B,QAAS,EAAK7B,WAAW8B,KAAK,KAAK7B,GAAQwB,UAAWD,EAAKrB,YAAYF,IAAS0B,OAM5G,yBAAKF,UAAU,iBACX,yBAAKA,UAAU,WACX,0DACA,oDACA,0BAAMI,QAAS,SAACrB,GAAM,EAAKd,MAAMI,OAAS,EAAKiC,KAAKC,YAAYC,MAAMC,QAAQ,QAAU,EAAKH,KAAKC,YAAYC,MAAMC,QAAQ,OAAO,EAAKhC,SAAS,CAACJ,QAAQ,EAAKJ,MAAMI,SAAS,EAAKJ,MAAMI,OAASU,EAAG2B,OAAOF,MAAMG,MAAQ,SAAW5B,EAAG2B,OAAOF,MAAMG,MAAQ,SAA7P,iBAEJ,wBAAIX,UAAU,cAAcY,IAAI,eAC5B,wDACA,wDACA,wDACA,wDACA,wDACA,yDAGA1C,EAAU+B,IAAI,SAACC,EAAK1B,GAAN,OACd,wBAAIwB,UAAWD,EAAKpB,cAAcH,GAAQ2B,IAAK3B,EAAOoC,IAAI,MACrDxC,EAAM6B,IAAI,SAACC,EAAKW,GAAN,OACP,wBAAIV,IAAKU,GACL,yBAAKC,IAAKZ,EAAKa,IAAKC,IAAI,GAAGZ,QAAS,EAAKxB,aAAayB,KAAK,KAAKH,EAAKrB,GAAG,UACxE,yBAAKmB,UAAU,eACX,2BAAIE,EAAKe,MAAT,MAAmBzC,GACnB,yBAAKwB,UAAU,eACX,uCAAQE,EAAKgB,OACb,2BAAG,gCAAQ,gCAAQ,+C,GAjFxCC,IAAMC,WAwGdC,sBARa,SAAApD,GAAK,MAAG,CAChC6B,UAAU7B,EAAM6B,YAGW,SAAAwB,GAAQ,MAAG,CACtCC,QAAQ,SAACC,GAAD,OAASF,EAAS,CAACG,KAAKC,IAAWC,QAAQH,OAGxCH,CAAoDrD","file":"static/js/4.54cf751e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Classify.css';\r\nimport {connect} from 'react-redux';\r\nimport {GET_SCROLL} from '../../store/types'\r\nclass Classify extends React.Component{\r\n    \r\n    state = {\r\n        goodsMenu : ['热销水果','热带水果','国外进口','今日热销','水果大王'],\r\n        currentIndex : 0,\r\n        lists:[],\r\n        isShow:true,\r\n        top:1\r\n    };\r\n    \r\n    changeMenu = (index)=>{\r\n        this.setState({\r\n            currentIndex:index\r\n        })\r\n        // console.log(ev.target);\r\n    };\r\n    changeStyle = (index)=>{\r\n        return index === this.state.currentIndex ? 'menu-active' : 'menu-unActive';\r\n    };\r\n    changeDisplay = (index)=>{\r\n        return index === this.state.currentIndex ? 'goods-display' : 'goods-hide';\r\n    };\r\n    \r\n    componentDidMount() {\r\n        Classify.axios({\r\n            url: `/mock/list?goodsList=${this.state.currentIndex}&menuLen=${this.state.goodsMenu.length}`\r\n        }).then(res=>{\r\n            this.setState({\r\n                lists:res.data.data\r\n            })\r\n        })\r\n        window.scrollTo(0,this.props.scrollTop)\r\n    }\r\n\r\n    clickHandler=(id,dataName,ev)=>{\r\n        // console.log('clickHandler',id, dataName, ev)\r\n        this.props.history.push({\r\n            pathname:'/detail/'+id,\r\n            search:'?dataName='+dataName\r\n        })\r\n    };\r\n    render() {\r\n        let goodsMenu = this.state.goodsMenu;\r\n        let lists = this.state.lists;\r\n        let that = this;\r\n        return (\r\n            <div className=\"classify\">\r\n                <div className=\"menu-left\">\r\n                    <ul>\r\n                        {\r\n                            goodsMenu.map((item,index) => (\r\n                            <li key={index} onClick={this.changeMenu.bind(null,index)} className={that.changeStyle(index)}>{item}</li>\r\n                            )\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"content-right\">\r\n                    <div className=\"nav-top\">\r\n                        <span>综合排序</span>\r\n                        <span >按价格</span>\r\n                        <span onClick={(ev)=>{this.state.isShow ? this.refs.allClassify.style.display='block' : this.refs.allClassify.style.display='none';this.setState({isShow:!this.state.isShow});this.state.isShow ? ev.target.style.color = 'orange' : ev.target.style.color = \"#666\";}}>分类</span>\r\n                    </div>\r\n                    <ol className=\"allClassify\" ref=\"allClassify\">\r\n                        <li>全部分类</li>\r\n                        <li>进口水果</li>\r\n                        <li>国产水果</li>\r\n                        <li>柑橘橙柚</li>\r\n                        <li>国产水果</li>\r\n                        <li>进口水果</li>\r\n                    </ol>\r\n                    {\r\n                        goodsMenu.map((item,index)=>(\r\n                        <ul className={that.changeDisplay(index)} key={index} ref=\"re\">\r\n                            {lists.map((item,i) => (\r\n                                <li key={i}>\r\n                                    <img src={item.img} alt=\"\" onClick={this.clickHandler.bind(null,item.id,'list')}/>\r\n                                    <div className=\"content-des\">\r\n                                        <p>{item.title}...{index}</p>\r\n                                        <div className=\"content-opt\">\r\n                                            <span>￥{item.price}</span>\r\n                                            <p><i>-</i><b>0</b><i>+</i></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            ))\r\n                            }\r\n                        </ul>\r\n                        )\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst initMapStateToProps = state=>({\r\n    scrollTop:state.scrollTop\r\n});\r\n\r\nconst initMapDispatchToProps = dispatch=>({\r\n    tScroll:(val) => dispatch({type:GET_SCROLL,payload:val}),\r\n});\r\n\r\nexport default connect(initMapStateToProps,initMapDispatchToProps)(Classify);"],"sourceRoot":""}