{"version":3,"sources":["pages/cart/Cart.js"],"names":["Cart","state","goodsItem","goods","this","props","i","length","axios","url","dataName","id","then","res","setState","push","data","className","mode","icon","type","onLeftClick","history","go","rightContent","key","style","marginRight","zIndex","position","top","left","right","borderBottom","map","item","index","backgroundColor","autoClose","text","onPress","console","log","color","padding","onOpen","onClose","onChange","name","src","img","banner","title","price","ev","size","value","num","React","Component","connect","dispatch"],"mappings":"4NAuBMA,E,2MAEFC,MAAQ,CACJC,UAAU,I,mFAKV,IAHiB,IAAD,OACZC,EAAQC,KAAKC,MAAMF,MACnBD,EAAYE,KAAKH,MAAMC,UACnBI,EAAI,EAAEA,EAAEH,EAAMI,OAAOD,IACzBN,EAAKQ,MAAM,CACPC,IAAI,SAAD,OAAUN,EAAMG,GAAGI,SAAnB,YAA+BP,EAAMG,GAAGK,MAC5CC,KAAK,SAAAC,GAEJ,EAAKC,SAAS,CACVX,MAAMD,EAAUa,KAAKF,EAAIG,KAAKA,Y,+BAMpC,IAAD,OAGDb,EAAQC,KAAKC,MAAMF,MAEvB,OACI,yBAAKc,UAAU,QACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACIC,KAAK,QACLC,KAAM,kBAAC,IAAD,CAAMC,KAAK,SACjBC,YAAa,kBAAM,EAAKhB,MAAMiB,QAAQC,IAAI,IAC1CC,aAAc,CACV,kBAAC,IAAD,CAAMC,IAAI,IAAIL,KAAK,SAASM,MAAO,CAAEC,YAAa,UAClD,kBAAC,IAAD,CAAMF,IAAI,IAAIL,KAAK,cAEvBM,MAAO,CAACE,OAAO,IAAIC,SAAS,QAAQC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,aAAa,qBAR1E,sBAUA,yBAAKhB,UAAU,oBACX,yBAAKA,UAAU,cAAf,oDACA,yBAAKA,UAAU,cAAf,4BAAiC,gGACjC,yBAAKA,UAAU,sBAEPb,KAAKH,MAAMC,UAAUgC,IAAI,SAACC,EAAKC,GAAN,OACrB,kBAAC,IAAD,CACIX,IAAKW,EACLV,MAAO,CAAEW,gBAAiB,OAAOT,QAAQ,GACzCU,WAAS,EACTN,MAAO,CACH,CACIO,KAAM,kBACNC,QAAS,kBAAMC,QAAQC,IAAI,WAC3BhB,MAAO,CAAEW,gBAAiB,OAAQM,MAAO,QAAQC,QAAQ,WAE7D,CACIL,KAAM,kBACNC,QAAS,kBAAMC,QAAQC,IAAI,WAC3BhB,MAAO,CAAEW,gBAAiB,UAAWM,MAAO,QAAQC,QAAQ,YAGpEC,OAAQ,kBAAMJ,QAAQC,IAAI,gBAC1BI,QAAS,kBAAML,QAAQC,IAAI,kBAE3B,yBAAKzB,UAAU,eACvB,0BAAMA,UAAU,oBACZ,2BAAO8B,SAAU,aAAQ3B,KAAK,WAAW4B,KAAK,OACvC/B,UAAU,0BACT,0BAAMA,UAAU,mBACxB,yBAAKgC,IAAKd,EAAKe,IAAMf,EAAKe,IAAMf,EAAKgB,UAC7B,yBAAKlC,UAAU,uBACX,0BAAMA,UAAU,qBAAqBkB,EAAKiB,OAC1C,yBAAKnC,UAAU,qBAAf,SAAoC,uBAAGA,UAAU,WAAWkB,EAAKkB,QACjE,yBAAKpC,UAAU,kBACX,0BAAMA,UAAU,uBAChB,2BAAO8B,SAAU,SAACO,KAASlC,KAAK,SAASmC,KAAK,IAAIC,MAAOrD,EAAMiC,GAAOqB,IAAK9C,GAAG,WAAWM,UAAU,oBACnG,0BAAMA,UAAU,0BAUhD,yBAAKA,UAAU,mBACX,2BAAOA,UAAU,YACb,0BAAMA,UAAU,oBAAmB,2BAAO8B,SAAU,aAAQ3B,KAAK,WAAWH,UAAU,GAAGN,GAAG,WADhG,gBAIA,0BAAMM,UAAU,qBAAhB,4BACA,0BAAMN,GAAG,WAAWM,UAAU,qBAA9B,QACA,uBAAGA,UAAU,qBAAb,qBAAoC,uBAAGN,GAAG,mBAC1C,0BAAMM,UAAU,uB,GA7FrByC,IAAMC,WA4GVC,sBARa,SAAA3D,GAAK,MAAG,CAChCE,MAAMF,EAAME,QAGe,SAAA0D,GAAQ,MAAG,IAI3BD,CAAoD5D","file":"static/js/3.edf62b22.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Cart.css';\r\nimport {NavBar, Icon, ListView, SwipeAction} from 'antd-mobile';\r\nimport {GET_GOODS} from \"../../store/types\";\r\nimport {connect} from \"react-redux\";\r\nconst data = [\r\n    {\r\n        img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\r\n        title: 'Meet hotel',\r\n        des: '不是所有的兼职汪都需要风吹日晒',\r\n    },\r\n    {\r\n        img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\r\n        title: 'McDonald\\'s invites you',\r\n        des: '不是所有的兼职汪都需要风吹日晒',\r\n    },\r\n    {\r\n        img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\r\n        title: 'Eat the week',\r\n        des: '不是所有的兼职汪都需要风吹日晒',\r\n    },\r\n];\r\n\r\nclass Cart extends React.Component{\r\n    \r\n    state = {\r\n        goodsItem:[]\r\n    }\r\n    componentDidMount() {\r\n        let goods = this.props.goods;\r\n        let goodsItem = this.state.goodsItem;\r\n        for(let i = 0;i<goods.length;i++){\r\n            Cart.axios({\r\n                url:`/mock/${goods[i].dataName}/${goods[i].id}`\r\n            }).then(res=>{\r\n                // this.state.goods.push(res.data.data)\r\n                this.setState({\r\n                    goods:goodsItem.push(res.data.data)\r\n                })\r\n            }\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        // console.log(this.props)\r\n        // console.log(this.state.goods)\r\n        let goods = this.props.goods;\r\n        // console.log(goods);\r\n        return (\r\n            <div className=\"cart\">\r\n                <div className=\"near-box\">\r\n                    <NavBar\r\n                        mode=\"light\"\r\n                        icon={<Icon type=\"left\" />}\r\n                        onLeftClick={() => this.props.history.go(-1)}\r\n                        rightContent={[\r\n                            <Icon key=\"0\" type=\"search\" style={{ marginRight: '16px' }} />,\r\n                            <Icon key=\"1\" type=\"ellipsis\" />,\r\n                        ]}\r\n                        style={{zIndex:999,position:\"fixed\",top:0,left:0,right:0,borderBottom:\"1px solid F9F9F9\"}}\r\n                    >购物车</NavBar>\r\n                    <div className=\"shop-cart-bigbox\">\r\n                        <div className=\"cart-title\">选择你的收获地点</div>\r\n                        <div className=\"cart-title\">收货时间 <i>今天30分钟可送达(可预订)</i></div>\r\n                        <div className=\"shop-cart-listbox1\">\r\n                            {\r\n                                this.state.goodsItem.map((item,index)=>(\r\n                                    <SwipeAction\r\n                                        key={index}\r\n                                        style={{ backgroundColor: 'gray',zIndex:-1}}\r\n                                        autoClose\r\n                                        right={[\r\n                                            {\r\n                                                text: ' 取 消 ',\r\n                                                onPress: () => console.log('cancel'),\r\n                                                style: { backgroundColor: '#399', color: 'white',padding:'0 15px' },\r\n                                            },\r\n                                            {\r\n                                                text: ' 删 除 ',\r\n                                                onPress: () => console.log('delete'),\r\n                                                style: { backgroundColor: '#F4333C', color: 'white',padding:'0 15px' },\r\n                                            },\r\n                                        ]}\r\n                                        onOpen={() => console.log('global open')}\r\n                                        onClose={() => console.log('global close')}\r\n                                    >\r\n                                        <div className=\"index-goods\">\r\n                                <span className=\"shop-cart-check2\">\r\n                                    <input onChange={()=>{}} type=\"checkbox\" name=\"sub2\"\r\n                                           className=\"shopcart-input1 btn2\"/></span>\r\n                                            <span className=\"index-goods-img\">\r\n                                    <img src={item.img ? item.img : item.banner }/></span>\r\n                                            <div className=\"index-goods-textbox\">\r\n                                                <span className=\"index-goods-text1\">{item.title}</span>\r\n                                                <div className=\"index-goods-text2\">￥<i className=\"priceJs\">{item.price}</i></div>\r\n                                                <div className=\"shop-cart-box3\">\r\n                                                    <span className=\"shop-cart-subtract\"></span>\r\n                                                    <input onChange={(ev)=>{}} type=\"number\" size=\"4\" value={goods[index].num} id=\"tb_count\" className=\"shop-cart-numer\" />\r\n                                                    <span className=\"shop-cart-add\"></span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </SwipeAction>\r\n                                )\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"shop-cart-total\">\r\n                        <label className=\"checkall\">\r\n                            <span className=\"shop-cart-check1\"><input onChange={()=>{}} type=\"checkbox\" className=\"\" id=\"ckAll\"/></span>\r\n                            全选\r\n                        </label>\r\n                        <span className=\"scart-total-text2\">合计：￥</span>\r\n                        <span id=\"AllTotal\" className=\"scart-total-text3\">0.00</span>\r\n                        <a className=\"scart-total-text4\">去结算<i id=\"selectedTotal\"></i></a>\r\n                        <span className=\"delete hide\"></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst initMapStateToProps = state=>({\r\n    goods:state.goods,\r\n});\r\n\r\nconst initMapDispatchToProps = dispatch=>({\r\n    // getGoods:(val) => dispatch({type:GET_GOODS,payload:val})\r\n});\r\n\r\nexport default connect(initMapStateToProps,initMapDispatchToProps)(Cart);"],"sourceRoot":""}